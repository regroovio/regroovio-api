name: Deploy ECS

on:
  workflow_call:
    inputs:
      stage:
        description: "The stage to deploy to (prod or dev)"
        required: true
        type: string

  workflow_dispatch:
    inputs:
      stage:
        description: "The stage to deploy to (prod or dev)"
        type: choice
        options:
          - prod
          - dev
        required: true

env:
  AWS_REGION: us-east-2
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-push-bump:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: ["downloader", "recognizer"]

    steps:
      - name: Cancel Workflow Action
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ secrets.GH_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        run: |
          cd main/app/${{ matrix.app }}
          IMAGE="${{ steps.login.outputs.registry }}/${{ matrix.app }}-${{ inputs.stage }}:${{ env.IMAGE_TAG }}"
          LATEST_IMAGE="${{ steps.login.outputs.registry }}/${{ matrix.app }}-${{ inputs.stage }}:latest"
          echo $IMAGE
          docker build -t $IMAGE .
          docker tag $IMAGE $LATEST_IMAGE
          docker push $IMAGE
          docker push $LATEST_IMAGE

      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: regroovio/argocd
          token: ${{ secrets.GH_TOKEN }}
          fetch-depth: 0

      - name: Dispatch bump-k8s-values
        run: gh workflow run bump-k8s-values.yaml --ref main -f stage=${{ inputs.stage }} -f image-version=${{ env.IMAGE_TAG }} -f values_files=values.${{ matrix.app }}.yaml
